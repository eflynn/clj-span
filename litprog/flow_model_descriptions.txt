"Plain English" SPAN flow model descriptions
Author: Gary W. Johnson
Date: 03/19/2012

* Overview

In this document, we describe eight implementations of the Service
Path Attribution Networks framework, one per ecosystem service
currently modeled by the ARIES system. Each one is given up to three
matrices with the same numbers of rows and columns, which represent
the continuous, spatial distribution of three variables -- source,
sink, and use values, described below -- over the same geographic
extent. These represent features relevant to the type of ecosystem
service-specific matter, energy, or information -- called the service
medium -- whose movement through space is the purpose of the given
SPAN implementation.

The first matrix shows the distribution of the service medium's
*source*. That is, each cell in the matrix records the amount of the
medium that should be generated by this geospatial location over the
course of the simulation.

The second matrix contains the distribution of the landscape's
absorption capacity with respect to the service medium in the same
units as the source matrix. We call these values the ecosystem service
*sink*. Sinks exist for many but not all services, so the sink matrix
will not exist in some instances.

The third matrix depicts the distribution of human populations or
assets that are likely to be affected, for better or worse, by
interaction with the service medium and may be either represented as a
simple binary presence/absence matrix or with a varying demand value
per cell in the same units as the source matrix. This matrix is called
the ecosystem service *use*. In the event that the service medium is
beneficial to people (e.g. drinking water, pollen for crops, scenic
views, i.e. "provisioning services"), *use* locations can be seen as
potential beneficiaries of an ecosystem good or service. If the
service medium is detrimental to people (e.g. floodwater, wildfire,
storm surges, i.e. "preventive services"), *use* locations will
represent populations or assets that are potentially vulnerable to an
ecosystem-generated threat.

At the start of each SPAN simulation, one service carrier object is
created in each source location with an initial weight equal to the
value in the source matrix at that location (a density) times the area
of that cell, so that each service carrier moves a volume around the
matrix.

In order to determine each carrier's path through the matrix, each of
the eight models below may need additional matrices for
topography-related variables. For example, the water supply, sediment
transport, and flood prevention models all require matrices containing
the spatial distribution of elevation and hydrologic networks. Which
variables are needed for service carrier routing varies from model to
model and will be described in each of the sections below as needed.

Over the course of each simulation, these carriers will move from cell
to cell through the matrix space, until either they become stuck in
one cell permanently, they move beyond the bounds of the matrix's
edges, or their weight falls below the *transition threshold*. This
value, given in the same units as the *source* matrix, is the minimum
amount of the service medium that the model user is interested in
keeping track of. Thus, any service carriers with weights below this
value are moving an insignificantly small amount of the medium around
and will be disregarded by the simulation from there on.

Whenever a carrier encounters a *sink* location, it will give up some
of its weight to that *sink* based on the absorption capacity still
remaining in the cell at that point in the simulation. After this new
absorption, the remaining *sink* value will be reduced by the carrier
weight absorbed.

Whenever a carrier encounters a *use* location, a new carrier is
stored in that cell, containing the entire route taken from the
original *source* cell as well as a list of all the *sinks*
encountered along this path and the amount of the carrier's weight
that was absorbed by each of them. Finally, this stored carrier is
given a weight, representing the amount of the service medium that
affects this location for good or ill.

If the usage process is destructive (i.e. typically rival use, such as
water taken from streams to drink, thereby reducing the amount of
downstream water available), then the stored carrier's weight will be
equal to the remaining *use* value in this location. As with *sink*
locations, this *use* value will be reduced by the weight captured
from the service carrier in this step. Similarly, the moving service
carrier's weight is reduced by the stored amount prior to moving on to
the next cell in the matrix.

If the usage process is non-destructive (e.g. floodwater encounters
one *use* location, damages its assets, and continues on to cause
damage to other *use* locations without the service carrier losing
water to these encounters), then the stored carrier's weight will be
equal to the full remaining weight of the moving service carrier. This
carrier will then move on to the next cell in the matrix without
losing any of the weight with which it entered the *use* location.

The SPAN simulation may be considered complete once all the moving
service carriers have been terminated according to the conditions set
forth above. At this point, all of the stored carriers are collected
from the *use* locations and passed to a set of sixteen
post-simulation analysis functions. Each of these functions produces a
new matrix, containing the spatial distribution of one of the
following variables:

|-----------+--------------+----------------------------------------------------|
| Component | Specifier    | Relation to Service Medium                         |
|-----------+--------------+----------------------------------------------------|
| Source    | Theoretical  | Expected production at origin                      |
| Source    | Actual       | Amount produced which reaches a use location       |
| Source    | Possible     | Same as Actual Source but excludes sink effects    |
| Source    | Inaccessible | Difference between Theoretical and Possible Source |
| Source    | Blocked      | Difference between Possible and Actual Source      |
|-----------+--------------+----------------------------------------------------|
| Sink      | Theoretical  | Expected absorption capacity at origin             |
| Sink      | Actual       | Amount absorbed along simulated flow paths         |
| Sink      | Inaccessible | Difference between Theoretical and Actual Sink     |
|-----------+--------------+----------------------------------------------------|
| Use       | Theoretical  | Expected demand/vulnerability at origin            |
| Use       | Actual       | Amount received along simulated flow paths         |
| Use       | Possible     | Same as Actual Use but excludes sink effects       |
| Use       | Inaccessible | Difference between Theoretical and Possible Use    |
| Use       | Blocked      | Difference between Possible and Actual Use         |
|-----------+--------------+----------------------------------------------------|
| Flow      | Actual       | Amount delivered to a use location                 |
| Flow      | Possible     | Same as Actual Flow but excludes sink effects      |
| Flow      | Blocked      | Difference between Possible and Actual Flow        |
|-----------+--------------+----------------------------------------------------|

These values are given as densities in their respective matrices so as
to be commensurate with the original input *source*, *sink*, and *use*
matrices.

In order to run in conditions of data scarcity, all of the SPAN
implementations below were created to accept input matrices with
either deterministic values or probability distributions per cell,
depending on the quality and completeness of the input data set. For
all ecosystem services but carbon sequestration and storage, the SPAN
model uses variance propagation to transmit the input uncertainties
through to the outputs. In the special case of carbon, in which all
*source* locations are connected to all *use* locations, the SPAN
model uses a Monte Carlo simulation approach.

* Carbon Sequestration and Storage
** Overview

The carbon SPAN model assesses the amount of carbon sequestration in
tons per hectare per year available to offset anthropogenic carbon
emissions produced within the same region. Before being distributed to
use locations, this sequestration value is first reduced by
landscape-generated carbon emissions (e.g. release of stored carbon
due to fire or deforestation). Because all source locations (carbon
sequestering ecosystems) are connected to all sink locations (carbon
emitting ecosystems) and all use locations (human carbon emitters) by
means of atmospheric gas mixing, the standard SPAN approach of
tracking routes across landscapes from source to use locations does
not apply to this ecosystem service. Instead, the algorithm simply
distributes the source value from each matrix cell among the use
locations based on their relative emissions values. Before being
assigned to these use cells, each source value is depleted by each
sink location, again based on its relative sink value.

** Procedure

1. The model first computes the number of hectares per cell for
   sources, sinks, and users given cell-width and cell-height in
   meters. This value multiplied by the densities (tons of CO2 per
   hectare) in each cell of the source, sink, and use matrices
   calculates the tons of CO2 sequestered, released, or emitted per
   cell.

2. Next, the user selects a number of iterations for the Monte Carlo
   simulation and draws this many sample worlds (e.g. one sample
   matrix each for source, sink, and use) by drawing sample values
   from the probability distributions in each of the matrix cells.

3. For each such sample world, the model:

   1. Calculates the total source, sink, and use values by summing
      across all cells in each matrix.

   2. Determines the total amount each source cell loses to all the
      sinks by multiplying each source value by the total sink divided
      by the total source. If the total sink is greater than the total
      source (i.e. there are more landscape emissions than
      sequestration), then every source cell simply loses all of its
      value to the sinks. Subtracting this result from the source
      value per cell gives the source amount remaining, which can be
      contributed to users (i.e. used to offset anthropogenic
      emissions). This can be called the *unsunk source* value.

   3. Computes the total amount each sink reduces all the sources by
      multiplying each sink value by the total source divided by the
      total sink. If the total source is greater than the total sink,
      then the amount sunk by every sink cell is simply its sink
      value. This is the *actual sink* value.

   4. Computes the total amount each user receives from all the
      sources by multiplying each use value by the total source
      divided by the total use. If the total source is greater than
      the total use, then the amount received by every use cell is
      simply its use value. This is the *possible use* value.

   5. Repeats step 4 above but replaces the source values with the
      unsunk source values from step 2. This computes the *actual use*
      value.

   6. Normalizes all source and use values between [0-1] by dividing
      by their totals.

   7. Pairs every source cell with every sink cell, and for each such
      pair, multiplies the normalized source value by the actual sink
      value. This calculates the amount each source cell loses to each
      sink cell.

   8. Pairs every source cell with every use cell, and for each such
      pair, multiplies the normalized source value by the possible use
      value. This calculates the possible amount each source cell
      contributes to each use cell.

   9. Pairs every source cell with every use cell, and for each such
      pair, multiplies the normalized source value by the actual use
      value. This calculates the actual amount each source cell
      contributes to each use cell.

   10. For each triplet combination of source, sink, and use cells,
       multiplies the normalized source value by the normalized use
       value and then by the actual sink value to compute the effect
       of each sink on each pair of source and use point.

4. Combines the results of each Monte Carlo iteration from step 3
   above by computing a distribution per use cell of the possible and
   actual service medium amounts received as well as the amounts lost
   to sinks.

5. Finally, divides the possible-weight, actual-weight, and
   sink-effects values by the number of hectares per cell to turn them
   back into densities (tons of CO2 per hectare per year) for
   comparison with the original input layers.

** Outputs

The carbon model produces theoretical, possible, actual, inaccessible,
and blocked carbon sources (sequestration), sinks (stored carbon
release), and uses (anthropogenic emissions). All values are in tons
of CO2 per hectare per year.

Subtracting the total theoretical sink value (summed across all cells
and multiplied by the number of hectares per cell) from the total
theoretical source value (summed across all cells and multiplied by
the number of hectares per cell) calculates the tons of carbon
sequestration per year available for offsetting anthropogenic
emissions. The net carbon balance of the study region can then be
determined by subtracting the total theoretical use value (summed
across all cells and multiplied by the number of hectares per cell)
from this available offset amount.

* Aesthetic Viewsheds
** Overview

The aesthetic viewsheds model in ARIES uses a line-of-sight SPAN model
to quantify view paths between source points (visually valued objects)
and use points (housing), checks for obstructions and sink features
(visual blight), and determines (using a digital elevation model) how
much of the source element can be seen from the use point. The source,
sink, and use layers will typically be outputs of a Bayesian network
model or reclassified input data giving relative values (0-100) for
sources, sinks, or users of visually valued viewsheds. A distance
decay function is applied to the results to compute the visual utility
originating from the source point that reaches each user. Sink
features that can degrade viewsheds are accounted for only if they are
present in the foreground of a user's view of a source location.

** Procedure

For each source point-use point pair, given that the points are not in
the same location (no /in situ/ use occurs), the model:

1. Computes the Euclidean distance in meters between the center of the
   source and use cells.

2. Calculates the source decay at this distance, and proceeds if
   positive (Fig. 1). Otherwise, there is no view service between this
   source and use point pair.

3. Looks up the elevation at every point between the source and use
   locations.

4. Takes the difference in meters between each elevation along this
   view line and the use point's elevation (i.e. computes the rises).

5. Calculates the Euclidean distance in meters between every point
   along this view line and the use location (i.e. computes the runs).

6. Calculates each of the view obstruction slopes along the view line
   by dividing each rise by its corresponding run.

7. Selects the maximum view obstruction slope from these values to be
   the determinant of how much of the source a user can and cannot see
   along this view line.

8. Computes the view elevation in meters projected onto the source by
   multiplying the maximum view obstruction slope by the Euclidean
   distance between the source and use points in meters and adding
   this value to the use elevation.

9. If the projected view elevation is negative (because the view
   obstruction slope was negative), then sets it to 0.

10. If the slope is positive, then the user is looking up. The model
    only counts the visible part of the source value. If the projected
    view elevation is greater than or equal to the source elevation,
    then the user cannot see the source location due to intervening
    obstructions. Therefore the source value along this line of sight
    is 0. If the projected view elevation is less than the source
    elevation, then the user can see some fraction of the source
    location. The model subtracts the projected view elevation from
    the source elevation and divides this difference by the source
    elevation to get a number between 0 and 1, representing the
    visible source fraction. This fraction is then multiplied by the
    total source value to get the visible source value.

11. If the slope is negative, then the user is looking straight ahead
    or down (e.g. looking from a hill down at a lake). If the
    projected view elevation is greater than the source elevation,
    then the user cannot see it, and the visible source value
    is 0. Otherwise, if the projected view elevation is less than or
    equal to the source elevation, then the user can see the entire
    source element. Thus, the model sets the visible source value to
    be the total source value.

12. Finally, multiplies the visible source value by the source decay
    at that user-to-source distance (Fig. 1) to compute the possible
    weight transmitted from the source point to the use point.

13. If the possible weight is below the transition threshold, then
    there is no service along this view line. Otherwise, continues
    with the next step.

14. For each sink location along the sight line, calculates the
    visible sink value using the same algorithm as for the source
    (e.g. projects view elevation onto the sink, multiplies sink value
    by fraction of sink elevation visible above the projected view
    elevation), and finally multiplies the visible sink value by the
    sink decay (Fig. 2) at its distance from the use point.

15. Computes the actual weight as the possible weight minus the sum of
    the sink effects along the sight line. If this value is negative
    (because sinks outweigh the source value), sets the actual weight
    to 0.

16. Stores a carrier on the use point with the possible and actual
    weights computed as described above, the line of sight route
    between the source and use point, and a list of sinks and their
    visual blight impacts on the actual weight value.

file:./source-decay.png

Fig 1. Source Decay: Grow from 0% to 100% over first mile. Next,
reduce from 100% to 75% from mile 1 to mile 5. Then, reduce from 75%
to 25% from mile 5 to mile 20. Finally, reduce from 25% to 0% from
mile 20 to mile 60.

file:./sink-decay.png

Fig 2. Sink Decay: Reduce from 100% to 75% over first 1/2 mile. Then
reduce from 75% to 0% over the next 1/2 mile.

** Outputs

The line-of-sight model produces theoretical, possible, actual,
inaccessible, and blocked viewshed sources, sinks, uses, and
flows. While the input source, sink, and use data were in relative
values from 0-100, the flow model outputs can have much higher
values. The reason for this is that the service medium moving between
locations is scenic beauty transmitted by light, which is
predominantly informational and is not subject to the laws of
conservation of mass or energy. That is, if many users all have a view
of the same mountain, they can all benefit from this view without
competing with one another.

Therefore, since at best each source location could potentially
provide a fully unobstructed, undecayed view to every user, the
theoretical source matrix contains the input source values (from
0-100) times the number of use locations.

Since each sink could at worst impact every line-of-sight path once,
the theoretical sink matrix contains the input sink values (from
0-100) times the number of line-of-sight paths possible (i.e. the
number of source point-use point pairs).

Finally, since each user could at best have a fully unobstructed,
undecayed view of every source point, the theoretical use map contains
the sum of all the input source values (each from 0-100) assigned
uniformly to every use location.

The most interesting outputs from this model are most likely to be the
possible and actual source, use, and flow matrices as well as the
actual and inaccessible sinks.

One known limitation of this model is that it assumes that the Earth
is flat for the purposes of distance decay calculations. An
improvement to the algorithm that incorporates the effects of the
Earth's curvature on views at a distance is currently under
development.

* Surface Water
** Overview

The surface water SPAN model traces the path taken by runoff downhill
and downstream according to a digital elevation model (DEM) and
hydrologic stream network. The source matrix represents the total
amount of runoff in mm per cell expected to be generated in each
location over the time period of the simulation (typically one
year). The sink matrix contains the expected water absorption capacity
of each cell (e.g. via evapotranspiration and soil infiltration) in mm
per cell. Finally, the use matrix shows the spatial distribution of
human demand for surface water also in mm per cell. As runoff service
carriers move from cell to cell during the simulation, their weight
(the remaining runoff value) will be reduced by encounters with both
sinks and users because the usage process (i.e. extracting water from
rivers and streams) reduces the amount available to downstream users
in this case.

** Procedure

1. Calculate the number of mm^2 per cell using the cell width and cell
   height in meters, and multiply this by the input source, sink, and
   use values as well as the transition threshold to convert them from
   densities (mm) to volumes (mm^3).

2. Find the nearest river or stream cell to each user using a
   Euclidean distance metric. In cases of low resolution input data,
   some users may appear to be co-located with river or stream cells,
   in which case this will be considered the nearest one to
   them. Multiple users may share the same nearest river or stream
   cell. This information is meant to identify the locations from
   which users withdraw water from rivers or streams.

3. Place a virtual bucket at each sink point in the landscape, whose
   capacity is the sink volume (in mm^3) at that location. This is
   called the *sink capacity*.

4. Place two virtual buckets at each withdrawal point detected in step
   2, whose capacities are equal to the sum of all the use volumes in
   their nearest use locations (as determined by step 2). One bucket
   is called the *possible use capacity*, and the other is called the
   *actual use capacity*. The first will keep track of the amount of
   surface water available to users at that location if there were no
   sinks on the landscape, and the second tracks the surface water
   available in the presence of sinks.

5. Create one runoff service carrier per source cell, and set its
   initial possible and actual weights to the source volume at that
   location.

6. Move all of the service carriers one step either downhill (if over
   land) or downstream (if in a river or stream cell). This involves
   the steps outline below.

   1. If over land and in a sink location whose sink capacity bucket
      is not already full of water from previous carriers, reduce the
      carrier's actual weight by the remaining sink capacity and
      reduce the remaining sink capacity by the amount of water
      absorbed. Record the amount absorbed by this sink in the
      carrier's sink effects list.

      If in a river or stream location that contains a possible or
      actual use capacity bucket that is not already full, reduce the
      carrier's possible weight by the remaining possible use
      capacity, reduce the carrier's actual weight by the remaining
      actual use capacity, and reduce the remaining possible and
      actual use capacities by the respective amounts of water that
      they each absorb. Store a new runoff carrier on this location
      with possible and actual weight values equal to the amounts of
      water absorbed by this location divided by the mm^2 per cell
      value (to translate them back into densities for comparison with
      the input matrices).

   2. If the runoff carrier's possible weight is greater than the
      transition threshold volume, move to the neighboring cell with
      the lowest elevation, excluding the previous cell from which the
      carrier just came (to avoid short infinite cycles due to locally
      flat topography). If more than one neighboring cell meets this
      criteria, select the one for which the angular distance is
      smallest between the current bearing and that required to reach
      this neighbor. Because this calculation cannot be performed on
      the matrix edges, any carrier which reaches an edge cell will be
      considered to have left the bounds of the study area.

7. Repeat step 6 until all service carriers have either gotten trapped
   in a single cell, flowed off the edge of the matrix bounds, or lost
   all of their possible weight to users.

8. Distribute the water captured in all the possible and actual use
   capacity buckets (those placed at stream withdrawal locations) to
   their nearest users (as determined by step 2) according to their
   relative use values. That is, use locations with greater use values
   (i.e. surface water demands) receive correspondingly more of the
   water captured at the stream withdrawal locations.

** Outputs

The surface water model produces theoretical, possible, actual,
inaccessible, and blocked surface water sources, sinks, uses, and
flows. All values are in mm of water per time period of the simulation
(often one year).

* Sediment Transport
** Overview

The sediment transport SPAN model traces the path taken by eroded soil
downhill and downstream according to a digital elevation model (DEM)
and hydrologic stream network. The source matrix represents the total
amount of eroded soil in tons per hectare expected to be lost from
each location over the time period of the simulation (typically one
year). The sink matrix contains the expected soil capture capacity of
each cell (e.g. via floodplain deposition) in tons per
hectare. Finally, the use matrix shows the spatial distribution of
human populations or assets that would either benefit from or be
harmed by sediment deposition (as presence/absence values). As
sediment service carriers move from cell to cell during the
simulation, their weight (the remaining soil amount they carry) will
be reduced by encounters with sinks (but not users). Users which are
co-located with sinks in floodplains will be affected by however much
sediment is captured by their sink. All other users will receive no
service according to this model.

** Procedure

1. Calculate the number of hectares per cell using the cell width and
   cell height in meters, and multiply this by the input source, sink,
   and use values to convert them from densities (tons/ha) to volumes
   (tons).

2. Find the nearest river or stream cell to each sink in a floodplain
   using a Euclidean distance metric. In cases of low resolution input
   data, some sinks may appear to be co-located with river or stream
   cells, in which case this will be considered the nearest one to
   them. Multiple sinks may share the same nearest river or stream
   cell. If there is a levee between a floodplain sink and its nearest
   river or stream cell, this sink will be considered nullified by the
   levee's water channeling effect. This information is meant to
   identify the river or stream locations from which sediment emerges
   into floodplains for deposition during flooding events.

3. Calculate the relative position of each non-levee-blocked
   floodplain sink along a line between its nearest river or stream
   point and the floodplain boundary. This position value is a real
   number between 0 and 1, where 0 indicates the floodplain boundary
   and 1 indicates the river or stream point. These values are called
   the *floodplain activation factors* and indicate each sink's
   relative vulnerability to sediment deposition within the
   floodplain.

4. Place a virtual bucket at each sink point not in a floodplain,
   whose capacity is the sink volume (in tons of sediment) at that
   location. This is called the *highland sink capacity*.

5. Place a virtual bucket at each sediment deposition point detected
   in step 2, whose capacities are equal to the sum of all the
   non-levee-blocked floodplain sink volumes in their nearest sink
   locations (as determined by step 2) times their respective flood
   activation factors (step 3). This is called the *floodplain sink
   capacity*.

6. Create one sediment service carrier per source cell, and set its
   initial actual weight to the source volume at that location. Its
   possible weight may be disregarded as there is no sediment
   deposition service provided by a landscape without sinks.

7. Move all of the service carriers one step either downhill (if over
   land) or downstream (if in a river or stream cell). This involves
   the steps outline below.

   1. If over land and in a non-floodplain sink location whose
      highland sink capacity bucket is not already full of sediment
      from previous carriers, reduce the carrier's actual weight by
      the remaining highland sink capacity and reduce the remaining
      highland sink capacity by the amount of sediment
      absorbed. Record the amount absorbed by this sink in the
      carrier's sink effects list.

      If in a river or stream location that contains a floodplain sink
      capacity bucket that is not already full, reduce the carrier's
      actual weight by the remaining floodplain sink capacity and
      reduce the remaining floodplain sink capacity by the amount of
      sediment absorbed. Record the amount absorbed by this sink in
      the carrier's sink effects list. Store a new sediment carrier on
      this location with possible and actual weight values equal to
      the amount of sediment absorbed by this location divided by the
      hectares per cell value (to translate them back into densities
      for comparison with the input matrices).

   2. Move to the neighboring cell with the lowest elevation,
      excluding the previous cell from which the carrier just came (to
      avoid short infinite cycles due to locally flat topography). If
      more than one neighboring cell meets this criteria, select the
      one for which the angular distance is smallest between the
      current bearing and that required to reach this
      neighbor. Because this calculation cannot be performed on the
      matrix edges, any carrier which reaches an edge cell will be
      considered to have left the bounds of the study area.

8. Repeat step 7 until all service carriers have either gotten trapped
   in a single cell, flowed off the edge of the matrix bounds, or lost
   all of their actual weight to sinks.

9. Distribute the sediment captured in all the floodplain sink
   capacity buckets (those placed at stream deposition locations) to
   their nearest floodplain sinks (as determined by step 2) according
   to their relative sink values (after multiplying by their flood
   activation factors). That is, floodplain sink locations with
   greater sink values (i.e. soil capture capacities) weighted by
   their floodplain activation factors receive correspondingly more of
   the sediment captured at the stream deposition locations.

10. If any of these floodplain sinks are co-located with a user, then
    service is considered to have been transmitted to that
    user. Otherwise, no service flow occurs at that location.

** Outputs

The sediment transport model produces theoretical, actual, and
inaccessible sediment sources, sinks, uses, and flows. All values are
in tons of sediment per hectare per time period of the simulation
(often one year).

* Coastal Storm Protection
** Overview
** Procedure
** Outputs
* Flood Water
** Overview
** Procedure
** Outputs
* Proximity
** Overview
** Procedure
** Outputs
* Subsistence Fisheries
** Overview
** Procedure
** Outputs
